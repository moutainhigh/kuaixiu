<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuaixiu.shop.dao.NewShopModelMapper" >
    <!-- Result Map-->
    <resultMap id="BaseResultMap" type="com.kuaixiu.shop.entity.NewShopModel" >
        <result column="id" property="id"/>
        <result column="shop_code" property="shopCode"/>
        <result column="brand_id" property="brandId"/>
        <result column="brand_name" property="brandName"/>
        <result column="model_id" property="modelId"/>
        <result column="sort" property="sort"/>
        <result column="create_time" property="createTime"/>
        <result column="create_userid" property="createUserid"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_userid" property="updateUserid"/>
    </resultMap>
    
    <!-- kx_shop_model table all fields -->
    <sql id="Base_Column_List" >
        t.id,t.shop_code,t.brand_id,t.model_id,t.sort,date_format(t.`create_time`,'%Y-%m-%d %H:%i:%s')create_time,t.create_userid,date_format(t.`update_time`,'%Y-%m-%d %H:%i:%s')update_time,t.update_userid
    </sql>

    <!-- 插入记录 -->
    <insert id="add" parameterType="Object" >
        insert into kx_new_shop_model
        (id,shop_code,brand_id,model_id,sort,create_time,create_userid)
        values
        (uuid(),#{shopCode},#{brandId},#{modelId},#{sort},now(),#{createUserid})
    </insert>

    <!-- 根据id，修改记录-->
    <update id="update" parameterType="Object" >
        update kx_new_shop_model 
        set 
            id=#{id},
            shop_code=#{shopCode},
            brand_id=#{brandId},
            model_id=#{modelId},
            sort=#{sort},
            update_time=now(),
            update_userid=#{updateUserid}
        where id=#{id}
    </update>

    <!-- 删除记录 -->
    <delete id="delete" parameterType="Object">
        delete from kx_new_shop_model where id = #{id}
    </delete>
    
    <!-- 删除记录 -->
    <delete id="deleteByShopCode" parameterType="Object">
        delete from kx_new_shop_model where shop_code = #{shopCode}
    </delete>
    
    <!-- 根据id查询  -->
    <select id="queryById"  resultMap="BaseResultMap" parameterType="Object">
        select <include refid="Base_Column_List" />
        	,b.name brand_name
        from kx_new_shop_model t 
        left join kx_new_brand b on t.brand_id = b.id
        where t.id = #{id}
    </select>

    <!-- 查询列表无分页 -->
    <select id="queryList" resultMap="BaseResultMap"  parameterType="Object">
        select <include refid="Base_Column_List"/>
        	,b.name brand_name
        from kx_new_shop_model t 
        left join kx_new_brand b on t.brand_id = b.id
        where 1=1
        <if test="id != null and id != ''" >
            and t.id = #{id}
        </if>
        <if test="shopCode != null and shopCode != ''" >
            and t.shop_code = #{shopCode}
        </if>
        <if test="brandId != null and brandId != ''" >
            and t.brand_id = #{brandId}
        </if>
        <if test="modelId != null and modelId != ''" >
            and t.model_id = #{modelId}
        </if>
    </select>
    
    <!-- 查询列表 带分页 -->
    <select id="queryListForPage" resultMap="BaseResultMap"  parameterType="Object">
        select <include refid="Base_Column_List"/>
        	,b.name brand_name
        from kx_new_shop_model t 
        left join kx_new_brand b on t.brand_id = b.id
        where 1=1
        <if test="id != null and id != ''" >
            and t.id = #{id}
        </if>
        <if test="shopCode != null and shopCode != ''" >
            and t.shop_code = #{shopCode}
        </if>
        <if test="brandId != null and brandId != ''" >
            and t.brand_id = #{brandId}
        </if>
        <if test="modelId != null and modelId != ''" >
            and t.model_id = #{modelId}
        </if>
    </select>

	<!-- 批量添加品牌 -->
    <insert id="addBatch" parameterType="java.util.Map">
        INSERT INTO kx_new_shop_model (id, shop_code, brand_id, model_id, sort, create_time, create_userid) VALUES
        <foreach collection="brands" item="bid" open="" close="" separator=",">
        	(uuid(), #{shopCode}, #{bid}, null, 99, now(), #{createUserid})
        </foreach>
    </insert>
</mapper>   