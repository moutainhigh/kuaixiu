<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/jdbc 
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.2.xsd"
        default-autowire="byName">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
	
    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="resultSetLogEnabled" value="false" />
    </bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    
        <!-- 配置初始化大小 -->
        <property name="initialSize" value="${dataSource.initialSize}" />
        <!-- 最大空闲连接 -->
		<property name="maxIdle" value="${dataSource.maxIdle}" />
        <!-- 最小空闲连接 -->
        <property name="minIdle" value="${dataSource.minIdle}" /> 
        <!-- 最大连接数量 -->
        <property name="maxActive" value="${dataSource.maxActive}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${dataSource.maxWait}" />
        <!--#是否自动回收超时连接 -->
        <property name="removeAbandoned" value="${dataSource.removeAbandoned}" />
        <!--超时时间(以秒数为单位) -->
        <property name="removeAbandonedTimeout" value="${dataSource.removeAbandonedTimeout}" />
        
        <!-- 建议配置为true，不影响性能，并且保证安全性。
                                    申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，
                                    执行validationQuery检测连接是否有效。  -->
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
       
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
    
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
    
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
         <!--如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。-->
        <!--<property name="poolPreparedStatements" value="false" />-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->
        <!--config.file=classpath:onelikeyouConfig.properties 提示解密 properties文件中必须有config.decrypt=true-->
        <!--druid.stat.slowSqlMillis=5000 用来配置SQL慢的标准，执行时间超过slowSqlMillis的就是慢
        <property name="connectionProperties" value="config.file=classpath:onelikeyouConfig.properties;druid.stat.slowSqlMillis=5000" />-->
        <!--用来配置SQL慢的标准，执行时间超过slowSqlMillis的就是慢-->
        <!-- 关闭abanded连接时输出错误日志 -->  
        <property name="logAbandoned" value="true" />
    </bean>
    
    <!-- 系统初始化 -->
    <bean id="systemPathInit" class="com.system.util.SystemPathInit"/>
    
    <!-- 开启注解 -->
    <context:annotation-config />
    
    <!-- 自动扫描指定注解目录 -->  
    <context:component-scan base-package="com.kuaixiu,com.system" />
    
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />
    
    <!--配置SessionFactory -->
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.kuaixiu,com.system.api.dao,com.system.basic" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>  
    </bean>  
     
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>
    
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    
    <!-- 系统初始化 -->
    <bean id="systemInit" class="com.system.util.SystemInit"/>
    <!-- 序列工具类 -->
    <bean id="seqUtil" class="com.system.basic.sequence.util.SeqUtil">
    </bean>
    
    <!-- 发货单定时处理任务 -->
    <import resource="job4Order.xml"/>
    <import resource="job4Statistic.xml"/>
</beans>
